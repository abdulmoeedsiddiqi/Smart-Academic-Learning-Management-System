<%- include('../partials/navbar') %>

<div class="container mx-auto px-4 py-8">
    <div class="max-w-4xl mx-auto">
        <h1 class="text-3xl font-bold text-gray-800 mb-6">Record Attendance</h1>
        
        <div class="bg-white shadow-md rounded-lg overflow-hidden">
            <div class="p-6">
                <!-- Course Selection -->
                <div class="mb-6">
                    <label for="courseId" class="block text-gray-700 text-sm font-bold mb-2">Select Course*</label>
                    <select 
                        id="courseId" 
                        class="form-select shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                        required
                    >
                        <option value="">Select Course</option>
                        <% courses.forEach(course => { %>
                            <option value="<%= course.id %>"><%= course.name %> (<%= course.courseCode %>)</option>
                        <% }); %>
                    </select>
                </div>
                
                <!-- Date Selection -->
                <div class="mb-6">
                    <label for="attendanceDate" class="block text-gray-700 text-sm font-bold mb-2">Date*</label>
                    <input 
                        type="date" 
                        id="attendanceDate" 
                        class="form-input shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                        value="<%= new Date().toISOString().split('T')[0] %>"
                        required
                    >
                </div>
                
                <div class="mb-4">
                    <button 
                        id="loadStudentsBtn" 
                        class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                    >
                        Load Students
                    </button>
                </div>
                
                <!-- Student List for Attendance (initially hidden) -->
                <div id="studentsContainer" class="hidden">
                    <h2 class="text-xl font-semibold mb-4">Mark Attendance</h2>
                    
                    <div class="overflow-x-auto">
                        <form id="attendanceForm" class="mb-4">
                            <table class="min-w-full divide-y divide-gray-200">
                                <thead class="bg-gray-50">
                                    <tr>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Student</th>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Notes</th>
                                    </tr>
                                </thead>
                                <tbody id="studentList" class="bg-white divide-y divide-gray-200">
                                    <!-- Students will be loaded here dynamically -->
                                </tbody>
                            </table>
                            
                            <div class="mt-6 flex justify-end">
                                <button 
                                    type="submit" 
                                    class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                                >
                                    Save Attendance
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
                
                <!-- No Students Message (initially hidden) -->
                <div id="noStudentsMessage" class="hidden bg-yellow-50 border-l-4 border-yellow-400 p-4 mb-6">
                    <div class="flex items-center">
                        <div class="flex-shrink-0">
                            <svg class="h-5 w-5 text-yellow-400" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                            </svg>
                        </div>
                        <div class="ml-3">
                            <p class="text-sm text-yellow-700">
                                No students enrolled in this course yet.
                            </p>
                        </div>
                    </div>
                </div>
                
                <!-- Success Message (initially hidden) -->
                <div id="successMessage" class="hidden bg-green-50 border-l-4 border-green-400 p-4 mb-6">
                    <div class="flex items-center">
                        <div class="flex-shrink-0">
                            <svg class="h-5 w-5 text-green-400" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                            </svg>
                        </div>
                        <div class="ml-3">
                            <p class="text-sm text-green-700">
                                Attendance recorded successfully!
                            </p>
                        </div>
                    </div>
                </div>
                
                <!-- Error Message (initially hidden) -->
                <div id="errorMessage" class="hidden bg-red-50 border-l-4 border-red-400 p-4 mb-6">
                    <div class="flex items-center">
                        <div class="flex-shrink-0">
                            <svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
                            </svg>
                        </div>
                        <div class="ml-3">
                            <p class="text-sm text-red-700" id="errorText">
                                Something went wrong. Please try again.
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const loadStudentsBtn = document.getElementById('loadStudentsBtn');
    const courseIdSelect = document.getElementById('courseId');
    const attendanceDateInput = document.getElementById('attendanceDate');
    const studentsContainer = document.getElementById('studentsContainer');
    const studentList = document.getElementById('studentList');
    const noStudentsMessage = document.getElementById('noStudentsMessage');
    const successMessage = document.getElementById('successMessage');
    const errorMessage = document.getElementById('errorMessage');
    const errorText = document.getElementById('errorText');
    const attendanceForm = document.getElementById('attendanceForm');
    
    // Hide all messages initially
    function hideMessages() {
        successMessage.classList.add('hidden');
        errorMessage.classList.add('hidden');
        noStudentsMessage.classList.add('hidden');
    }
    
    // Load students for the selected course
    loadStudentsBtn.addEventListener('click', async function(e) {
        e.preventDefault();
        hideMessages();
        
        const courseId = courseIdSelect.value;
        
        if (!courseId) {
            errorText.textContent = 'Please select a course.';
            errorMessage.classList.remove('hidden');
            return;
        }
        
        try {
            const response = await fetch(`/api/courses/${courseId}/students`);
            const students = await response.json();
            
            if (students && students.length > 0) {
                // Show the students container
                studentsContainer.classList.remove('hidden');
                
                // Clear existing student list
                studentList.innerHTML = '';
                
                // Populate student list
                students.forEach(enrollment => {
                    const student = enrollment.Student;
                    const row = document.createElement('tr');
                    
                    row.innerHTML = `
                        <td class="px-6 py-4 whitespace-nowrap">
                            <input type="hidden" name="students[${student.id}][studentId]" value="${student.id}">
                            <div class="text-sm font-medium text-gray-900">${student.User.firstName} ${student.User.lastName}</div>
                            <div class="text-sm text-gray-500">${student.studentId}</div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <select name="students[${student.id}][status]" class="form-select shadow border rounded py-1 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                                <option value="present" selected>Present</option>
                                <option value="absent">Absent</option>
                                <option value="late">Late</option>
                                <option value="excused">Excused</option>
                            </select>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <input type="text" name="students[${student.id}][notes]" class="form-input shadow border rounded py-1 px-2 w-full text-gray-700 leading-tight focus:outline-none focus:shadow-outline" placeholder="Optional note...">
                        </td>
                    `;
                    
                    studentList.appendChild(row);
                });
            } else {
                studentsContainer.classList.add('hidden');
                noStudentsMessage.classList.remove('hidden');
            }
        } catch (error) {
            console.error('Error loading students:', error);
            errorText.textContent = 'Error loading students. Please try again.';
            errorMessage.classList.remove('hidden');
        }
    });
    
    // Submit the attendance form
    attendanceForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        hideMessages();
        
        const courseId = courseIdSelect.value;
        const date = attendanceDateInput.value;
        
        if (!courseId || !date) {
            errorText.textContent = 'Course and date are required.';
            errorMessage.classList.remove('hidden');
            return;
        }
        
        // Get all form data
        const formData = new FormData(attendanceForm);
        const students = [];
        
        // Parse form data to create students array
        const data = {};
        for (let [key, value] of formData.entries()) {
            const match = key.match(/students\[([^\]]+)\]\[([^\]]+)\]/);
            if (match) {
                const studentId = match[1];
                const field = match[2];
                
                if (!data[studentId]) {
                    data[studentId] = { studentId };
                }
                
                data[studentId][field] = value;
            }
        }
        
        // Convert to array
        for (let id in data) {
            students.push(data[id]);
        }
        
        try {
            // Get current user's teacher ID
            const userResponse = await fetch('/api/auth/me');
            const userData = await userResponse.json();
            
            // Get the teacher ID from the teacher profile
            const teacherResponse = await fetch(`/api/teachers?userId=${userData.id}`);
            const teachers = await teacherResponse.json();
            const teacherId = teachers[0].id;
            
            // Send attendance data
            const response = await fetch(`/api/teachers/${teacherId}/courses/${courseId}/attendance`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    date,
                    students
                })
            });
            
            if (response.ok) {
                successMessage.classList.remove('hidden');
                // Reset form or redirect as needed
            } else {
                const errorData = await response.json();
                errorText.textContent = errorData.message || 'Error recording attendance.';
                errorMessage.classList.remove('hidden');
            }
        } catch (error) {
            console.error('Error submitting attendance:', error);
            errorText.textContent = 'Error submitting attendance. Please try again.';
            errorMessage.classList.remove('hidden');
        }
    });
});
</script>

<%- include('../partials/footer') %>
